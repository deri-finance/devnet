{"version":3,"sources":["utils/DeriNumberFormat.js","pages/AirDrop/img/time.svg","pages/AirDrop/AirDrop.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","div","test","height","DeriNumberFormat","renderablity","setRenderablity","useState","className","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","renderText","replace","useEffect","wallet","closeShowLoadingEffectAfterLoaded","defaultValue","others","bg","toFixed","decimalScale","countDecimal","toPlainString","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","inject","observer","lang","balance","setBalance","disabled","setDisabled","alert","useAlert","info","setInfo","getBalance","a","isConnected","apiProxy","request","detail","chainId","account","res","getInfo","valid","Date","getTime","click","error","eqInNumber","includeResponse","success","formatAddress","src","timeLogo","alt","Button","fontWeight","label","fontSize","onClick"],"mappings":"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","file":"static/js/25.72d0a4b1.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toPlainString,countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.div`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \r\n          || ((Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n  const renderText = value => value && value.replace(/\\.$/,'')\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \r\n\r\n    if(isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if(!allowZero && others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      }\r\n      others.value = toPlainString(others.value)\r\n      if(others.value && /\\d+.9{6}/.test(others.value)){\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      setRenderablity(<Wrapper {...others}  renderText={renderText}\r\n      displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n    } else if(firstTime){\r\n      const {width,height} = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if(closeShowLoadingEffectAfterLoaded){\r\n        setFirstTime(false)\r\n      }\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if(!isValidate()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value,props.decimalScale,props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","export default __webpack_public_path__ + \"static/media/time.77d9d1c0.svg\";","import { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { formatAddress, eqInNumber } from '../../utils/utils'\r\nimport { useAlert } from 'react-alert'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport Button from '../../components/Button/Button'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport timeLogo from './img/time.svg'\r\nimport './airdrop.less'\r\nfunction AriDrop({ lang, wallet = {} }) {\r\n  const [balance, setBalance] = useState(0);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const alert = useAlert();\r\n  const [info, setInfo] = useState({})\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n  const getInfo = async () => {\r\n    if (wallet.isConnected()) {\r\n      let info = await apiProxy.request('getUserInfoAllForAirDrop', [wallet.detail.account])\r\n      setInfo(info)\r\n      setDisabled(!info.valid)\r\n      let timestamp = new Date()\r\n      if(timestamp.getTime() >= 1646388000000){\r\n        setDisabled(true)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const click = async () => {\r\n    if (!info.valid) {\r\n      alert.error(lang['no-deri-to-claim']);\r\n      return;\r\n    }\r\n    if (!eqInNumber(wallet.detail.chainId, info.chainId)) {\r\n      alert.error(lang['please-switch-to-BSC-to-claim-deri'])\r\n      return;\r\n    }\r\n    let res = await apiProxy.request('mintAirdrop', [info.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (!res.success) {\r\n      alert.error(lang['claim-failed'])\r\n    }\r\n    if(res.success){\r\n      setDisabled(true)\r\n    }\r\n    getBalance()\r\n  }\r\n  useEffect(() => {\r\n    getBalance()\r\n    getInfo()\r\n  }, [wallet,wallet.detail])\r\n  return (\r\n    <div className='airdrop-box'>\r\n      <div className='airdrop-info'>\r\n        <div className='airdrop-info-box'>\r\n          <div className='airdrop-title'>\r\n            {lang['title']}\r\n          </div>\r\n          <div className='wallet-address'>\r\n            <span className='blue-logo'></span>\r\n            {formatAddress(wallet.detail.account)}\r\n          </div>\r\n          <div className='wallet-balance'>\r\n            {lang['wallet-balance']} : <DeriNumberFormat value={balance} decimalScale={0} thousandSeparator={true} /> DERI\r\n          </div>\r\n          <div className='airdrop-time'>\r\n            <div className='time-logo'>\r\n              <img src={timeLogo} alt='' />\r\n            </div>\r\n            <div className='time-text'>\r\n              <div className='time-title'>\r\n                <div>\r\n                  {lang['start-time']}\r\n                </div>\r\n                <div>\r\n                  {lang['expire-time']}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  2022-03-01 06:00:00 UTC\r\n                </div>\r\n                <div>\r\n                  2022-03-04 10:00:00 UTC\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='claim'>\r\n            <Button fontWeight='bold' disabled={disabled} label={lang['claim']} width='277' height='72' fontSize='32' onClick={click} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('wallet', 'poolManager')(observer(AriDrop))"],"sourceRoot":""}